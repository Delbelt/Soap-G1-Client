//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://soap/users", ConfigurationName="UsersPort")]
public interface UsersPort
{
    
    [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
    System.Threading.Tasks.Task<CargarUsuariosResponse1> CargarUsuariosAsync(CargarUsuariosRequest1 request);
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap/users")]
public partial class CargarUsuariosRequest
{
    
    private string fileContentField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string fileContent
    {
        get
        {
            return this.fileContentField;
        }
        set
        {
            this.fileContentField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap/users")]
public partial class CargarUsuariosResponse
{
    
    private string[] usuariosCargadosField;
    
    private string[] erroresField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
    [System.Xml.Serialization.XmlArrayItemAttribute("usuario", IsNullable=false)]
    public string[] usuariosCargados
    {
        get
        {
            return this.usuariosCargadosField;
        }
        set
        {
            this.usuariosCargadosField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
    [System.Xml.Serialization.XmlArrayItemAttribute("error", IsNullable=false)]
    public string[] errores
    {
        get
        {
            return this.erroresField;
        }
        set
        {
            this.erroresField = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
public partial class CargarUsuariosRequest1
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap/users", Order=0)]
    public CargarUsuariosRequest CargarUsuariosRequest;
    
    public CargarUsuariosRequest1()
    {
    }
    
    public CargarUsuariosRequest1(CargarUsuariosRequest CargarUsuariosRequest)
    {
        this.CargarUsuariosRequest = CargarUsuariosRequest;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
public partial class CargarUsuariosResponse1
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap/users", Order=0)]
    public CargarUsuariosResponse CargarUsuariosResponse;
    
    public CargarUsuariosResponse1()
    {
    }
    
    public CargarUsuariosResponse1(CargarUsuariosResponse CargarUsuariosResponse)
    {
        this.CargarUsuariosResponse = CargarUsuariosResponse;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
public interface UsersPortChannel : UsersPort, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
public partial class UsersPortClient : System.ServiceModel.ClientBase<UsersPort>, UsersPort
{
    
    /// <summary>
    /// Implemente este método parcial para configurar el punto de conexión de servicio.
    /// </summary>
    /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
    /// <param name="clientCredentials">Credenciales de cliente</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
    
    public UsersPortClient() : 
            base(UsersPortClient.GetDefaultBinding(), UsersPortClient.GetDefaultEndpointAddress())
    {
        this.Endpoint.Name = EndpointConfiguration.UsersPortSoap11.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public UsersPortClient(EndpointConfiguration endpointConfiguration) : 
            base(UsersPortClient.GetBindingForEndpoint(endpointConfiguration), UsersPortClient.GetEndpointAddress(endpointConfiguration))
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public UsersPortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
            base(UsersPortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public UsersPortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(UsersPortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public UsersPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<CargarUsuariosResponse1> UsersPort.CargarUsuariosAsync(CargarUsuariosRequest1 request)
    {
        return base.Channel.CargarUsuariosAsync(request);
    }
    
    public System.Threading.Tasks.Task<CargarUsuariosResponse1> CargarUsuariosAsync(CargarUsuariosRequest CargarUsuariosRequest)
    {
        CargarUsuariosRequest1 inValue = new CargarUsuariosRequest1();
        inValue.CargarUsuariosRequest = CargarUsuariosRequest;
        return ((UsersPort)(this)).CargarUsuariosAsync(inValue);
    }
    
    public virtual System.Threading.Tasks.Task OpenAsync()
    {
        return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
    }
    
    private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.UsersPortSoap11))
        {
            System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
            result.MaxBufferSize = int.MaxValue;
            result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            result.MaxReceivedMessageSize = int.MaxValue;
            result.AllowCookies = true;
            return result;
        }
        throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
    }
    
    private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.UsersPortSoap11))
        {
            return new System.ServiceModel.EndpointAddress("http://localhost:8080/ws/*");
        }
        throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
    }
    
    private static System.ServiceModel.Channels.Binding GetDefaultBinding()
    {
        return UsersPortClient.GetBindingForEndpoint(EndpointConfiguration.UsersPortSoap11);
    }
    
    private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
    {
        return UsersPortClient.GetEndpointAddress(EndpointConfiguration.UsersPortSoap11);
    }
    
    public enum EndpointConfiguration
    {
        
        UsersPortSoap11,
    }
}
